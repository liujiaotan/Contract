@model Contract.Models.Tenancy

@{
    ViewBag.Title = Resources.Resource.Tenancy;
    Layout = "~/Views/Shared/_LayoutCreate.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyID, "客户", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.HiddenFor(model => model.CompanyID, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rooms, "房间", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.Hidden("SelectRooms")
                @Html.DropDownList("Rooms", null, htmlAttributes: new { @class = "form-control", multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.Rooms, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitCost, "单价", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="input-group">
                    <div class="input-group-addon">￥</div>@Html.EditorFor(model => model.UnitCost, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @Html.ValidationMessageFor(model => model.UnitCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceFee, "服务费", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="input-group">
                    <div class="input-group-addon">￥</div>@Html.EditorFor(model => model.ServiceFee, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @Html.ValidationMessageFor(model => model.ServiceFee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HeatingFee, "取暖费", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="input-group">
                    <div class="input-group-addon">￥</div>@Html.EditorFor(model => model.HeatingFee, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @Html.ValidationMessageFor(model => model.HeatingFee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ElectricityRate, "电费", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="input-group">
                    <div class="input-group-addon">￥</div>@Html.EditorFor(model => model.ElectricityRate, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @Html.ValidationMessageFor(model => model.ElectricityRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeaseTerm, "租赁期限", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="input-group">
                    @Html.EditorFor(model => model.LeaseTerm, new { htmlAttributes = new { @class = "form-control" } })<div class="input-group-addon">年</div>
                </div>
                @Html.ValidationMessageFor(model => model.LeaseTerm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Resources.Resource.Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(@Resources.Resource.Back, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/select2")
    <script>
        $(function () {

            $("#CompanyID").select2({
                placeholder: "请选择客户",
                minimumInputLength: 2,
                ajax: { // instead of writing the function to execute the request we use Select2's convenient helper
                    url: "/Ajax/Companies",
                    dataType: 'json',
                    quietMillis: 250,
                    data: function (term, page) {
                        return {
                            q: term, // search term
                        };
                    },
                    results: function (data, page) { // parse the results into the format expected by Select2.
                        // since we are using custom formatting functions we do not need to alter the remote JSON data
                        return { results: data };
                    },
                    cache: true
                },
                formatResult: repoFormatResult, // omitted for brevity, see the source of this page
                formatSelection: repoFormatSelection,  // omitted for brevity, see the source of this page
                dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
                escapeMarkup: function (m) { return m; } // we do not want to escape markup since we are displaying html in results
            });
        });

        function repoFormatResult(repo) {
            var markup = '<div class="row-fluid">' + repo.name + "</div>";

            return markup;
        }

        function repoFormatSelection(repo) {
            return repo.name;
        }

        $("#Rooms").select2({
            maximumSelectionSize: 5
        }).on("change", function (e) { $("#SelectRooms").val($(this).select2("val")); });
    </script>
}

@section Styles {
    @Styles.Render("~/Content/select2")
}

