@model Contract.Models.Room

@{
    ViewBag.Title = Resources.Resource.Room;
    Layout = "~/Views/Shared/_LayoutEdit.cshtml";
    var serviceCenter = (Contract.Models.ServiceCenter)ViewBag.ServiceCenter;
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceCenterID, "服务中心", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @if (serviceCenter == null)
                {
                    @Html.DropDownList("ServiceCenterID", null, htmlAttributes: new { @class = "form-control" })
                }
                else
                {
                    <span class="uneditable-input">@serviceCenter.Name</span>
                    @Html.HiddenFor(model => model.ServiceCenterID)
                }
                @Html.ValidationMessageFor(model => model.ServiceCenterID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, "类型", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Category", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, "状态", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Type", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Number, "房间号", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Space, "面积", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Space, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Space, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, "备注", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Resources.Resource.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(@Resources.Resource.Back, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
